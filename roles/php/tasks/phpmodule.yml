- file: path=/opt/phpfarm/src/{{ php.version }}/modules state=directory

- unarchive:
    src: "https://pecl.php.net/get/{{ module.name }}"
    dest: /opt/phpfarm/src/{{ php.version }}/modules
    copy: no
    creates: /opt/phpfarm/src/{{ php.version }}/modules/{{ module.name }}
    owner: root
    group: root
  when: module.version is not defined

- unarchive:
    src: "https://pecl.php.net/get/{{ module.name }}-{{ module.version }}"
    dest: /opt/phpfarm/src/{{ php.version }}/modules
    copy: no
    creates: /opt/phpfarm/src/{{ php.version }}/modules/{{ module.name }}
    owner: root
    group: root
  when: module.version is defined

- shell: "mv /opt/phpfarm/src/{{ php.version }}/modules/{{ module.name }}-* /opt/phpfarm/src/{{ php.version }}/modules/{{ module.name }}"
  args:
    creates: "/opt/phpfarm/src/{{ php.version }}/modules/{{ module.name }}"

- shell: ls -d /opt/phpfarm/src/{{ php.version }}/modules/{{ module.name }}
  register: module_dir
  changed_when: false
  check_mode: no

#- stat:
#    path: "{{ module_dir.stdout }}/Makefile"
#  register: module_makefile
#
#- name: Clean {{ module }}
#  shell: "cd {{ module_dir.stdout }} && make clean"
#  when: module_makefile.stat.exists == True

- name: Build {{ module.name }}
  shell: "{{ item }}"
  args:
    chdir: "{{ module_dir.stdout }}"
    creates: "{{ extension_dir.stdout }}/{{ module.name }}.so"
  with_items:
    - "/opt/phpfarm/inst/php-{{ php.version }}/bin/phpize"
    - "./configure --with-php-config=/opt/phpfarm/inst/php-{{ php.version }}/bin/php-config"
    - make
    - make install
  notify:
    - restart php-fpms
